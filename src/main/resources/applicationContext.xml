<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<context:component-scan
		base-package="tech.agiledev.spring4.crm.dao, tech.agiledev.spring4.crm.service" />

	<jdbc:embedded-database id="dataSource"
		database-name="crm" type="H2">
		<jdbc:script location="db/createTables.sql" />
		<jdbc:script location="db/createData.sql" />
	</jdbc:embedded-database>

	<!-- Le template est Thread-safe et peut donc être unique à travers tous 
		les DAOs -->
	<bean id="jdbcTemplate" scope="singleton"
		class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
		</property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- Ce transaction manager permet de combiner DAO JPA et JDBC -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <!-- possible de rendre explicites les éléments de configuration -->
        <!-- surtout en l'absence d'unicité (ex. plusieurs contextes JPA / DataSource -->
    </bean>
    
    <!-- Ce transaction manager suffirait pour des DAO JDBC seuls -->
	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> -->
	<!-- <property name="dataSource" ref="dataSource"/> -->
	<!-- </bean> -->
    
	<cache:annotation-driven/>
    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="client"/>               
            </set>
        </property>
    </bean>
</beans>
